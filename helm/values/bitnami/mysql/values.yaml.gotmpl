auth:
  rootPassword: {{ .Values | get "mysqlRootPassword" }}
  database: {{ .Values | get "mysqlDefaultSvoeDb" }}
  username: {{ .Values | get "mysqlUsername" }}
  password: {{ .Values | get "mysqlPassword" }}
initdbScripts:
  mysqls3init.sh: |-
{{ readFile "../../charts/local/mysql-extra/scripts/mysqls3init.sh" | indent 4 }}
  mysqls3restore.sh: |-
{{ readFile "../../charts/local/mysql-extra/scripts/mysqls3restore.sh" | indent 4 }}
## TODO terminationGracePeriodSeconds
primary:
  extraEnvVarsSecret: mysqls3backup-secret # should be synced with mysql-extra
  sidecars:
    - name: pre-stop-dumper
      image: alpine:latest
      command:
        - /scripts/mysqls3init.sh
      volumeMounts:
        - name: mysqls3backup-vol # should be synced with mysql-extra
          mountPath: /scripts
      envFrom:
        - secretRef:
            name: mysqls3backup-secret # should be synced with mysql-extra
      lifecycle:
        preStop:
          exec:
            command:
              - /scripts/mysqls3dump.sh
  persistance:
    enabled: true
    existingClaim: ""
    accessModes:
      - ReadWriteOnce
    size: 2Gi
  service:
    type: ClusterIP
metrics:
  enabled: true
  service:
    type: ClusterIP
    port: 9104
    annotations:
      prometheus.io/scrape: "true"
      prometheus.io/port: "{{ .Values.metrics.service.port }}"
  serviceMonitor:
    enabled: true
    namespace: mysql # should be synced with release namespace
    interval: 10s
