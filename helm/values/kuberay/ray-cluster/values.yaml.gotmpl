# TODO https://github.com/ray-project/kuberay/issues/1030
# https://discuss.ray.io/t/multiple-node-types-with-ray-kubernetes/702
# https://discuss.ray.io/t/k8s-ray-specifying-gpu-node-type/1251

image:
  {{ if (eq .Values.clusterType "minikube") }}
  repository: ray-with-svoe-deps
  tag: ray2.3.1-py310-aarch64-1
  pullPolicy: Never
  {{ else }}
  repository: 050011372339.dkr.ecr.ap-northeast-1.amazonaws.com/anov/ray-with-svoe-deps
  tag: ray2.3.1-py310-aarch64-1
  pullPolicy: IfNotPresent
  {{ end }}

service:
  type: ClusterIP

head:
  rayStartParams:
    num-cpus: '0' # to disable task scheduling on head node
    port: '6379'
    dashboard-host: '0.0.0.0'
    block: 'true'
  # rayVersion determines the autoscaler's image version.
  rayVersion: 2.3.1
  enableInTreeAutoscaling: true
  # TODO set autoscaler resources
  autoscalerOptions:
    upscalingMode: Default
    idleTimeoutSeconds: 60
  containerEnv:
    - name: MY_POD_IP
      valueFrom:
        fieldRef:
          fieldPath: status.podIP
  envFrom:
     - secretRef:
         name: ray-mysql-secret
     - secretRef:
         name: ray-aws-creds-secret
  resources:
    limits:
      cpu: 1
      memory: 3Gi
    requests:
      cpu: 1
      memory: 3Gi
  annotations: {}
  nodeSelector: {}
  {{ if (eq .Values.clusterType "minikube") }}
  affinity: {}
  tolerations: []
  {{ else }}
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
              - key: workload-type
                operator: In
                values:
                  - ray
              - key: instance-type
                operator: In
                values:
                  - on-demand
  tolerations:
    - key: workload-type
      operator: Equal
      value: ray
      effect: NoSchedule
    - key: instance-type
      operator: Equal
      value: on-demand
      effect: NoSchedule
  {{ end }}
  volumes:
    - name: log-volume
      emptyDir: {}
  volumeMounts:
    - mountPath: /tmp/ray
      name: log-volume
  sidecarContainers: []

worker:
  # If you want to disable the default workergroup
  # uncomment the line below
  # disabled: true
  groupName: small-on-demand
  replicas: 0
  minReplicas: 0
  maxReplicas: 1000
  labels:
    worker-size: small
    instance-type: on-demand
  rayStartParams:
    resources: '"{\"worker_size_small\": 9999999, \"instance_on_demand\": 9999999}"'
    node-ip-address: $MY_POD_IP
    redis-password: LetMeInRay
    block: 'true'
  containerEnv:
    - name: MY_POD_IP
      valueFrom:
        fieldRef:
          fieldPath: status.podIP
    - name: RAY_DISABLE_DOCKER_CPU_WARNING
      value: "1"
    - name: CPU_REQUEST
      valueFrom:
        resourceFieldRef:
          containerName: ray-worker
          resource: requests.cpu
    - name: MY_POD_NAME
      valueFrom:
        fieldRef:
          fieldPath: metadata.name
  envFrom:
    - secretRef:
        name: ray-mysql-secret
    - secretRef:
        name: ray-aws-creds-secret
  ports:
    - containerPort: 80
      protocol: TCP
  resources:
    limits:
      cpu: 1
      memory: 3Gi
    requests:
      cpu: 800m
      memory: 3Gi
  {{ if (eq .Values.clusterType "minikube") }}
  affinity: {}
  tolerations: []
  {{ else }}
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
              - key: workload-type
                operator: In
                values:
                  - ray
              - key: instance-type
                operator: In
                values:
                  - on-demand
  tolerations:
    - key: workload-type
      operator: Equal
      value: ray
      effect: NoSchedule
    - key: instance-type
      operator: Equal
      value: on-demand
      effect: NoSchedule
  {{ end }}
  volumes:
    - name: log-volume
      emptyDir: {}
  volumeMounts:
    - mountPath: /tmp/ray
      name: log-volume
  sidecarContainers: []

# The map's key is used as the groupName.
# For example, key:small-group in the map below
# will be used as the groupName
additionalWorkerGroups:
  large-spot:
    replicas: 0
    minReplicas: 0
    maxReplicas: 1000
    type: worker-large-spot
    labels:
      worker-size: large
      instance-type: on-demand
    rayStartParams:
      resources: '"{\"worker_size_large\": 9999999, \"instance_spot\": 9999999}"'
      node-ip-address: $MY_POD_IP
      redis-password: LetMeInRay
      block: 'true'
    containerEnv:
      - name: MY_POD_IP
        valueFrom:
          fieldRef:
            fieldPath: status.podIP
      - name: RAY_DISABLE_DOCKER_CPU_WARNING
        value: '1'
      - name: CPU_REQUEST
        valueFrom:
          resourceFieldRef:
            containerName: ray-worker
            resource: requests.cpu
      - name: MY_POD_NAME
        valueFrom:
          fieldRef:
            fieldPath: metadata.name
    envFrom:
      - secretRef:
          name: ray-mysql-secret
      - secretRef:
          name: ray-aws-creds-secret
    ports:
      - containerPort: 80
        protocol: TCP
    resources:
      limits:
        cpu: 1
        memory: 7Gi
      requests:
        cpu: 800m
        memory: 7Gi
    {{ if (eq .Values.clusterType "minikube") }}
    affinity: {}
    tolerations: []
    {{ else }}
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
            - matchExpressions:
                - key: workload-type
                  operator: In
                  values:
                    - ray
                - key: instance-type
                  operator: In
                  values:
                    - spot
    tolerations:
      - key: workload-type
        operator: Equal
        value: ray
        effect: NoSchedule
      - key: instance-type
        operator: Equal
        value: spot
        effect: NoSchedule
    {{ end }}
    volumes:
      - name: log-volume
        emptyDir: {}
    volumeMounts:
      - mountPath: /tmp/ray
        name: log-volume
    sidecarContainers: []
