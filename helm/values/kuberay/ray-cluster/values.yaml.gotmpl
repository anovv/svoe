image:
  repository: 050011372339.dkr.ecr.ap-northeast-1.amazonaws.com/anov/ray-with-svoe-deps
  tag: 0.0.2 # TODO 0.0.2 -> ray 2.0.0, 0.0.3 -> ray 2.3.1
  pullPolicy: IfNotPresent
#  repository: rayproject/ray
#  tag: 2.3.1-py39-cpu
#  pullPolicy: IfNotPresent

nameOverride: "kuberay"

head:
  groupName: headgroup
  replicas: 1
  type: head
  labels:
    key: value
  initArgs:
    port: '6379'
    dashboard-host: '0.0.0.0'
    num-cpus: '1'  # can be auto-completed from the limits
#    node-ip-address: $MY_POD_IP  # auto-completed as the head pod IP
    block: 'true'
  containerEnv:
    - name: MY_POD_IP
      valueFrom:
        fieldRef:
          fieldPath: status.podIP
  envFrom:
     - secretRef:
         name: ray-mysql-secret
     - secretRef:
         name: ray-aws-creds-secret
  resources:
    limits:
      cpu: 1
    requests:
      cpu: 1
  annotations: {}
  nodeSelector: {}
  tolerations: []
  affinity: {}
  volumes:
    - name: log-volume
      emptyDir: {}
  volumeMounts:
    - mountPath: /tmp/ray
      name: log-volume
  sidecarContainers: []


worker:
  # If you want to disable the default workergroup
  # uncomment the line below
  # disabled: true
  groupName: workergroup
  replicas: 1
  type: worker
  labels:
    key: value
  initArgs:
    node-ip-address: $MY_POD_IP
    redis-password: LetMeInRay
    block: 'true'
  containerEnv:
    - name: MY_POD_IP
      valueFrom:
        fieldRef:
          fieldPath: status.podIP
    - name: RAY_DISABLE_DOCKER_CPU_WARNING
      value: "1"
    - name: CPU_REQUEST
      valueFrom:
        resourceFieldRef:
          containerName: ray-worker
          resource: requests.cpu
    - name: MY_POD_NAME
      valueFrom:
        fieldRef:
          fieldPath: metadata.name
  envFrom:
     - secretRef:
         name: ray-mysql-secret
     - secretRef:
         name: ray-aws-creds-secret
  ports:
    - containerPort: 80
      protocol: TCP
  resources:
    limits:
      cpu: 1
    requests:
      cpu: 200m
  annotations:
    key: value
  nodeSelector: {}
  tolerations: []
  affinity: {}
  volumes:
    - name: log-volume
      emptyDir: {}
  volumeMounts:
    - mountPath: /tmp/ray
      name: log-volume
  sidecarContainers: []

# The map's key is used as the groupName.
# For example, key:small-group in the map below
# will be used as the groupName
additionalWorkerGroups:
  smallGroup:
    # Disabled by default
    disabled: true
    replicas: 1
    minReplicas: 1
    maxReplicas: 3
    type: worker
    labels: {}
    initArgs:
      node-ip-address: $MY_POD_IP
      redis-password: LetMeInRay
      block: 'true'
    containerEnv:
      - name: MY_POD_IP
        valueFrom:
          fieldRef:
            fieldPath: status.podIP
      - name: RAY_DISABLE_DOCKER_CPU_WARNING
        value: "1"
      - name: CPU_REQUEST
        valueFrom:
          resourceFieldRef:
            containerName: ray-worker
            resource: requests.cpu
      - name: MY_POD_NAME
        valueFrom:
          fieldRef:
            fieldPath: metadata.name
    envFrom: []
      # - secretRef:
      #     name: my-env-secret
    ports:
      - containerPort: 80
        protocol: TCP
    resources:
      limits:
        cpu: 1
      requests:
        cpu: 200m
    annotations:
      key: value
    nodeSelector: {}
    tolerations: []
    affinity: {}
    volumes:
      - name: log-volume
        emptyDir: {}
    volumeMounts:
      - mountPath: /tmp/ray
        name: log-volume
    sidecarContainers: []

headServiceSuffix: "ray-operator.svc"

service:
  type: ClusterIP
  port: 8080