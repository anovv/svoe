existingObjstoreSecret: thanos-objstore-config-secret
# TODO add dependsOn kube-prometheus-stack to helmfile for thanos chart (for ServiceMonitor CRD to be created)
query:
  enabled: true
  dnsDiscovery:
    enabled: true
    sidecarsService: "" # TODO needed?
    sidecarsNamespace: "" # TODO needed?
  stores:
    - dnssrv+_grpc._tcp.kube-prometheus-stack-thanos-discovery.monitoring.svc.cluster.local
    {{ range $clusterId := .Values | get "clusterIds" }}
    {{ if not (eq $clusterId 1)}} # TODO set env var indicating if cluster is an observer
    - thanos-global-cluster-{{ $clusterId }}.monitoring.svc.cluster.local:10901
    {{ end }}
    {{ end }}

queryFrontend:
  enabled: true

bucketweb:
  enabled: true
  refresh: 5m

compactor:
  enabled: true
  persistence:
    size: 2Gi
    existingClaim: ""

storegateway:
  enabled: true
  persistence:
    size: 2Gi
    existingClaim: ""

ruler:
  enabled: true
  alertmanagers:
    - http://prometheus-operator-alertmanager.monitoring.svc.cluster.local:9093
    {{ range $clusterId := .Values | get "clusterIds" }}
    {{ if not (eq $clusterId 1) }}  # TODO set env var indicating if cluster is an observer
    - http://alertmanager-global-cluster-{{ $clusterId }}.monitoring.svc.cluster.local:9093
    {{ end }}
    {{ end }}
  config: |-
    groups:
      - name: "metamonitoring"
        rules:
          - alert: "PrometheusDown"
            expr: absent(up{prometheus="monitoring/prometheus-operator"})

receive:
  enabled: false

minio:
  enabled: true
  auth:
    rootUser: {{ .Values | get "minioRootUser" }}
    rootPassword: {{ .Values | get "minioRootPassword" }}
  defaultBuckets: svoe-prometheus-thanos #TODO sync this with monitoring-extra secret via env vars?

metrics:
  enabled: true
  serviceMonitor:
    enabled: true