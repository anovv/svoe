commonLabels:
  cluster-name: {{ .Values | get "clusterName" }}
  cluster-id: {{ .Values | get "clusterId" | quote }}

# TODO set pod requests/limits
#https://github.com/particuleio/terraform-kubernetes-addons/blob/main/modules/aws/kube-prometheus.tf
grafana:
  adminPassword: {{ .Values | get "grafanaAdminPassword" }}
  service:
    type: NodePort
    annotations:
      dns.alpha.kubernetes.io/external: grafana.{{ .Values | get "clusterName" }}
  persistence:
    enabled: true
    type: pvc
    storageClassName: default
    accessModes:
    - ReadWriteOnce
    size: 2Gi
    finalizers:
    - kubernetes.io/pvc-protection
  sidecar:
    dashboards:
      multicluster:
        global:
          enabled: true
        etcd:
          enabled: true
    # TODO set datasources ??
    datasources:
      defaultDatasourceEnabled: false
  # TODO additionalDataSources - Thanos, Athena, MySQL, Redis, etc
  additionalDataSources:
    - name: prometheus
      access: proxy
      editable: false
      orgId: 1
      type: prometheus
      url: http://thanos-query-frontend.monitoring.svc.cluster.local:9090
      version: 1
      isDefault: true
  dashboardProviders:
    dashboardproviders.yaml:
      apiVersion: 1
      providers:
        - name: 'default'
          orgId: 1
          folder: ''
          type: file
          disableDeletion: false
          editable: true
          options:
            path: /var/lib/grafana/dashboards/default
  dashboards:
    default:
      thanos-overview:
        url: https://raw.githubusercontent.com/thanos-io/thanos/master/examples/dashboards/overview.json
      thanos-compact:
        url: https://raw.githubusercontent.com/thanos-io/thanos/master/examples/dashboards/compact.json
      thanos-query:
        url: https://raw.githubusercontent.com/thanos-io/thanos/master/examples/dashboards/query.json
      thanos-store:
        url: https://raw.githubusercontent.com/thanos-io/thanos/master/examples/dashboards/store.json
      thanos-receiver:
        url: https://raw.githubusercontent.com/thanos-io/thanos/master/examples/dashboards/receive.json
      thanos-sidecar:
        url: https://raw.githubusercontent.com/thanos-io/thanos/master/examples/dashboards/sidecar.json
      thanos-rule:
        url: https://raw.githubusercontent.com/thanos-io/thanos/master/examples/dashboards/rule.json
      thanos-replicate:
        url: https://raw.githubusercontent.com/thanos-io/thanos/master/examples/dashboards/bucket-replicate.json
      cluster-autoscaler:
        gnetId: 3831
        revision: 1
        datasource: prometheus

prometheus:
  thanosService:
    enabled: true

  thanosServiceMonitor:
    enabled: true

  prometheusSpec:
    # retention: 1d ??
    # externalUrl: "" ??
    thanos:
      image: quay.io/thanos/thanos:v0.24.0
      version: v0.24.0
      objectStorageConfig:
        name: thanos-objstore-config-secret
        key: objstore.yml
    serviceMonitorSelectorNilUsesHelmValues: false
    storageSpec:
      volumeClaimTemplate:
        spec:
          accessModes:
          - ReadWriteOnce
          resources:
            requests:
              storage: 2Gi
    externalLabels:
      cluster: {{ .Values | get "clusterName" }}
      cluster_id: {{ .Values | get "clusterId" | quote}}
  server:
    persistentVolume:
      enabled: true

kubelet:
  serviceMonitor:
    https: true