rayStartParams:
  resources: '"{\"worker_size_small\": 9999999, \"instance_on_demand\": 9999999}"'
  node-ip-address: $MY_POD_IP
  redis-password: LetMeInRay
  block: 'true'
replicas: 0
minReplicas: 0
maxReplicas: 0
groupName:
  template:
    spec:
      imagePullSecrets: [] # remove
      serviceAccountName: {} # remove
      containers:
        - volumeMounts:
            - mountPath: /tmp/ray
              name: log-volume
          name: ray-worker
          image: dummy
          imagePullPolicy: dummy
          resources: dummy
          securityContext: {} # remove
          env:
            - name: MY_POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: RAY_DISABLE_DOCKER_CPU_WARNING
              value: '1'
            - name: CPU_REQUEST
              valueFrom:
                resourceFieldRef:
                  containerName: ray-worker
                  resource: requests.cpu
            - name: MY_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
          envFrom:
            - secretRef:
                name: ray-mysql-secret
            - secretRef:
                name: ray-aws-creds-secret
          ports:
            - containerPort: 80
              protocol: TCP
          lifecycle: {} # remove
          command: [] # remove
          args: [] # remove
      volumes:
        - name: log-volume
          emptyDir: {}
      affinity: {{- toYaml .Values.worker.affinity | nindent 10 }}
      tolerations: {}
      nodeSelector: {} # remove
    metadata:
      annotations: {} # remove
      labels: dummy