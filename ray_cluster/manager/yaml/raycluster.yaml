apiVersion: ray.io/v1alpha1
kind: RayCluster
metadata:
  labels: dummy
  name: dummy
  annotations: {} # remove
spec:
  rayVersion: 2.3.1
  enableInTreeAutoscaling: false
  autoscalerOptions:
    upscalingMode: Default
    idleTimeoutSeconds: 60
  headGroupSpec:
    serviceType: ClusterIP
    rayStartParams:
      num-cpus: '0' # to disable task scheduling on head node
      port: '6379'
      dashboard-host: '0.0.0.0'
      block: 'true'
    template:
      spec:
        imagePullSecrets: dummy # remove
        serviceAccountName: dummy # remove
        containers:
          - volumeMounts:
              - mountPath: /tmp/ray
                name: log-volume
            name: ray-head
            image: image
            imagePullPolicy: dummy
            resources: {}
            securityContext: [] # remove
            env:
              - name: MY_POD_IP
                valueFrom:
                  fieldRef:
                    fieldPath: status.podIP
            envFrom:
              - secretRef:
                  name: ray-mysql-secret
              - secretRef:
                  name: ray-aws-creds-secret
            ports: [] # remove
            lifecycle: [] # remove
            command: [] # remove
            args: []#  remove
        volumes:
          - name: log-volume
            emptyDir: {}
        affinity: dummy
        tolerations: dummy
        nodeSelector: {} # remove
      metadata:
        annotations: {} # remove
        labels: dummy
  workerGroupSpecs: []

  {{- range $groupName, $values := .Values.additionalWorkerGroups }}
  {{- if ne $values.disabled true }}
  - rayStartParams:
    {{- if and (not $values.rayStartParams) (not $values.initArgs) }}
      {}
    {{- else }}
      {{- range $key, $val := $values.rayStartParams }}
        {{ $key }}: {{ $val | quote }}
      {{- end }}
      {{- /*
      initArgs is a deprecated alias for rayStartParams.
      */}}
      {{- range $key, $val := $values.initArgs }}
        {{ $key }}: {{ $val | quote }}
      {{- end }}
    {{- end }}
    replicas: {{ $values.replicas }}
    minReplicas: {{ $values.minReplicas | default (default 1 $values.miniReplicas) }}
    maxReplicas: {{ $values.maxReplicas | default (default 2147483647 $values.maxiReplicas) }}
    groupName: {{ $groupName }}
    template:
      spec:
        imagePullSecrets: {{- toYaml $.Values.imagePullSecrets | nindent 10 }}
        {{- if $values.serviceAccountName }}
        serviceAccountName: {{ $values.serviceAccountName }}
        {{- end }}
        containers:
          - volumeMounts: {{- toYaml $values.volumeMounts | nindent 12 }}
            name: ray-worker
            image: {{ $.Values.image.repository }}:{{ $.Values.image.tag }}
            imagePullPolicy: {{ $.Values.image.pullPolicy }}
            resources: {{- toYaml $values.resources | nindent 14 }}
            securityContext:
            {{- toYaml $values.securityContext | nindent 14 }}
            env:
            {{- toYaml $values.containerEnv | nindent 14}}
            {{- if $values.envFrom }}
            envFrom: {{- toYaml $values.envFrom | nindent 14}}
            {{- end }}
            ports: {{- toYaml $values.ports | nindent 14}}
            {{- if $values.lifecycle }}
            lifecycle:
            {{- toYaml $values.lifecycle | nindent 14 }}
            {{- end }}
            {{- if $values.command }}
            command: {{- toYaml $values.command | nindent 14}}
            {{- end }}
            {{- if $values.args }}
            args: {{- toYaml $values.args | nindent 14}}
            {{- end }}
          {{- if $values.sidecarContainers }}
          {{- toYaml $values.sidecarContainers | nindent 10 }}
          {{- end }}
        volumes: {{- toYaml $values.volumes | nindent 10 }}
        affinity: {{- toYaml $values.affinity | nindent 10 }}
        tolerations: {{- toYaml $values.tolerations | nindent 10 }}
        nodeSelector: {{- toYaml $values.nodeSelector | nindent 10 }}
      metadata:
        annotations: {{- toYaml $values.annotations | nindent 10 }}
        {{- if $values.labels }}
        labels: {{- toYaml $values.labels | nindent 10 }}
{{ include "ray-cluster.labels" $ | indent 10 }}
        {{ else }}
        labels: {{ include "ray-cluster.labels" $ | nindent 10 }}
        {{- end }}

  {{- end }}
  {{- end }}
  {{- if ne (.Values.worker.disabled | default false) true }}
  - rayStartParams:
    {{- if and (not .Values.worker.rayStartParams) (not .Values.worker.initArgs) }}
      {}
    {{- else }}
      {{- range $key, $val := .Values.worker.rayStartParams }}
        {{ $key }}: {{ $val | quote }}
      {{- end }}
      {{- /*
      initArgs is a deprecated alias for rayStartParams.
      */}}
      {{- range $key, $val := .Values.worker.initArgs }}
        {{ $key }}: {{ $val | quote }}
      {{- end }}
    {{- end }}
    replicas: {{ .Values.worker.replicas }}
    minReplicas: {{ .Values.worker.minReplicas | default (default 1 .Values.worker.miniReplicas) }}
    maxReplicas: {{ .Values.worker.maxReplicas | default (default 2147483647 .Values.worker.maxiReplicas) }}
    groupName: {{ .Values.worker.groupName }}
    template:
      spec:
        imagePullSecrets: {{- toYaml .Values.imagePullSecrets | nindent 10 }}
        {{- if .Values.worker.serviceAccountName }}
        serviceAccountName: {{ .Values.worker.serviceAccountName }}
        {{- end }}
        containers:
          - volumeMounts: {{- toYaml .Values.worker.volumeMounts | nindent 12 }}
            name: ray-worker
            image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
            imagePullPolicy: {{ .Values.image.pullPolicy }}
            resources: {{- toYaml .Values.worker.resources | nindent 14 }}
            securityContext:
            {{- toYaml .Values.worker.securityContext | nindent 14 }}
            env:
            {{- toYaml .Values.worker.containerEnv | nindent 14}}
            {{- with .Values.worker.envFrom }}
            envFrom: {{- toYaml . | nindent 14}}
            {{- end }}
            ports: {{- toYaml .Values.worker.ports | nindent 14}}
            {{- if .Values.worker.lifecycle }}
            lifecycle:
            {{- toYaml .Values.worker.lifecycle | nindent 14 }}
            {{- end }}
            {{- if .Values.worker.command }}
            command: {{- toYaml .Values.worker.command | nindent 14}}
            {{- end }}
            {{- if .Values.worker.args }}
            args: {{- toYaml .Values.worker.args | nindent 14}}
            {{- end }}
          {{- if .Values.worker.sidecarContainers }}
          {{- toYaml .Values.worker.sidecarContainers | nindent 10 }}
          {{- end }}
        volumes: {{- toYaml .Values.worker.volumes | nindent 10 }}
        affinity: {{- toYaml .Values.worker.affinity | nindent 10 }}
        tolerations: {{- toYaml .Values.worker.tolerations | nindent 10 }}
        nodeSelector: {{- toYaml .Values.worker.nodeSelector | nindent 10 }}
      metadata:
        annotations: {{- toYaml .Values.worker.annotations | nindent 10 }}
        {{- if .Values.worker.labels }}
        labels: {{- toYaml .Values.worker.labels | nindent 10 }}
{{ include "ray-cluster.labels" . | indent 10 }}
        {{ else }}
        labels: {{ include "ray-cluster.labels" $ | nindent 10 }}
        {{- end }}
  {{- end }}
